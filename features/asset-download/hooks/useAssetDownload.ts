"use client";

import { api } from "@/lib/trpc";
import { useToast } from "@/components/ui/toast";
import { AssetDownload } from "@/types";

/**
 * Custom hook for AssetDownload CRUD operations
 *
 * Generated by MultiFileGenerator
 */
export function useAssetDownload() {
  const { toast } = useToast();
  const utils = api.useUtils();

  // Query: Fetch list of assetdownloads
  const {
    data: assetdownloads,
    isLoading,
    error,
    refetch,
  } = api.assetDownload.list.useQuery(undefined, {
    staleTime: 5 * 60 * 1000, // 5 minutes
  });

  // Mutation: Create AssetDownload
  const { mutate: createAssetDownload, isPending: isCreating } =
    api.assetDownload.create.useMutation({
      onSuccess: () => {
        utils.assetDownload.list.invalidate();
        toast({
          title: "Success",
          description: "AssetDownload created successfully",
        });
      },
      onError: (error) => {
        toast({
          title: "Error",
          description: error.message || "Failed to create assetdownload",
          variant: "destructive",
        });
      },
    });

  // Mutation: Update AssetDownload
  const { mutate: updateAssetDownload, isPending: isUpdating } =
    api.assetDownload.update.useMutation({
      onSuccess: () => {
        utils.assetDownload.list.invalidate();
        toast({
          title: "Success",
          description: "AssetDownload updated successfully",
        });
      },
      onError: (error) => {
        toast({
          title: "Error",
          description: error.message || "Failed to update assetdownload",
          variant: "destructive",
        });
      },
    });

  // Mutation: Delete AssetDownload
  const { mutate: deleteAssetDownload, isPending: isDeleting } =
    api.assetDownload.delete.useMutation({
      onSuccess: () => {
        utils.assetDownload.list.invalidate();
        toast({
          title: "Success",
          description: "AssetDownload deleted successfully",
        });
      },
      onError: (error) => {
        toast({
          title: "Error",
          description: error.message || "Failed to delete assetdownload",
          variant: "destructive",
        });
      },
    });

  return {
    // Data
    assetdownloads: assetdownloads ?? [],
    isLoading,
    error,

    // Actions
    createAssetDownload,
    updateAssetDownload,
    deleteAssetDownload,
    refetch,

    // Loading states
    isCreating,
    isUpdating,
    isDeleting,
  };
}
